name: CI/CD with Render

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Install docker-compose and tools
      - name: Install docker-compose, curl, jq
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose curl jq

      # 4. Build Docker images
      - name: Build Docker images
        run: docker-compose -f docker-compose.yml build

      # 5. Run backend tests in temporary container
      - name: Run backend tests
        run: docker-compose run --rm flask_app pytest --maxfail=1 --disable-warnings -v

      # 6. Run frontend tests in temporary container
      - name: Run frontend tests
        run: docker-compose run --rm nextjs_app npm test --prefix ./frontend
        env:
          CI: true

      # 7. Tear down any running containers (cleanup)
      - name: Tear down containers
        run: docker-compose down --volumes --remove-orphans

      # 8. Deploy backend to Render (only if tests pass)
      - name: Deploy backend to Render
        run: |
          DEPLOY_BACKEND=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys)
          echo "Backend deploy started: $DEPLOY_BACKEND"

      # 9. Deploy frontend to Render (only if tests pass)
      - name: Deploy frontend to Render
        run: |
          DEPLOY_FRONTEND=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_FRONTEND_SERVICE_ID }}/deploys)
          echo "Frontend deploy started: $DEPLOY_FRONTEND"
